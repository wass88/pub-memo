{"pageProps":{"id":"2022-10-28-virtual-dom","notion":[{"notionID":"6858b08e-715d-42a2-a59c-5efa486bee04","id":"2023-09-05-pga-3d","icon":"🧬","tags":["math"],"title":"投影幾何学的代数PGAによる3次元計算が楽で面白い","summary":"行列とかクォータニオンとか3次元平面とか全部一緒くたにあつかえるすごいヤツ","recordMap":null,"lastUpdated":"2023-09-07T04:21:00.000Z"},{"notionID":"89c14752-8289-4501-92db-370984ba07a1","id":"2023-07-02-yoneda-hom-functor","icon":"🔄","tags":["math","category"],"title":"ようやく理解した米田の補題とHom関手","summary":"圏論の基本と米田の補題がどう嬉しいのか。証明は書いてありません。","recordMap":null,"lastUpdated":"2023-07-03T14:23:00.000Z"},{"notionID":"41b05590-7ee6-4ad2-8def-f14ffd551a4d","id":"2023-05-26-poisson-collision","icon":"🎯","tags":["dev","math"],"title":"[訂正あり] 秒単位で衝突するファイル名をミリ秒単位に改善すると、1000倍安全になる","summary":"訂正しました。誕生日のパラドックスを考えると1000倍の安全性は手に入らない気がするが…？","recordMap":null,"lastUpdated":"2023-05-30T02:20:00.000Z"},{"notionID":"6d4a7c25-192f-4cc8-b642-fc10a18253ab","id":"2023-05-24-kariuchi-solver","icon":"🤞","tags":["dev","game"],"title":"奈良時代のボドゲ「かりうち」のソルバー","summary":"ショートカットが強すぎる気がしたので、モンテカルロ法のソルバーを書いた。","recordMap":null,"lastUpdated":"2023-05-24T04:10:00.000Z"},{"notionID":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","id":"2023-05-19-b-plus-tree-database","icon":"📃","tags":["dev","rust","web"],"title":"B+木を実装してデータベースとRustのRefCellに詳しくなる","summary":"Rustで簡単なデータベースを書く","recordMap":null,"lastUpdated":"2023-05-19T09:00:00.000Z"},{"notionID":"e7c37287-e4e5-49af-9965-5d924a782535","id":"2023-05-02-nearest-fraction-table","icon":"➗","tags":["math"],"title":"最も近い分数を探す表 ― 29%は「3人に1人」ではなく「7人に2人」 ","summary":"小数とそれに近い分数の表","recordMap":null,"lastUpdated":"2023-05-02T02:08:00.000Z"},{"notionID":"b0f0ca26-8c65-41d8-a26a-5094feb5290f","id":"2021-01-01-main-page","icon":"📂","tags":["dialy"],"title":"昔のブログとメインページ","summary":"","recordMap":null,"lastUpdated":"2023-01-11T12:37:00.000Z"},{"notionID":"d6b01565-6154-4d9e-adaf-4251d2686f5c","id":"2023-01-10-pencil-puzzle-sugar","icon":"🧩","tags":["puzzle","dev"],"title":"ペンシルパズルを自作して、唯一解判定ソルバーをSugar CSPソルバで作る","summary":"自作ペンパの作成補助ツールを書いた","recordMap":null,"lastUpdated":"2023-01-10T12:20:00.000Z"},{"notionID":"aaf030d8-d49a-459c-a27f-0b42f51a661e","id":"2022-12-08-zsh-ctrl-c-recover","icon":"🧬","tags":["dev"],"title":"zshでミスってCtrl-Cをして、空っぽになった入力を取り戻す","summary":"うっかりキャンセルしたコマンドを再入力できるようにzshを設定する。","recordMap":null,"lastUpdated":"2022-12-07T04:52:00.000Z"},{"notionID":"745b2eee-1012-4d85-a824-046b71d0645f","id":"2022-12-05-shortcut-of-word","icon":"🍰","tags":["dev"],"title":"ショートカットでコマンドを入力すると、どんな環境でもそこそこ便利になる","summary":"iterm2のショートカットで頻出単語を入力する","recordMap":null,"lastUpdated":"2022-12-05T16:13:00.000Z"},{"notionID":"082b239b-a9f1-4602-9a4e-f7dcc5c44983","id":"2022-10-29-repair-ih","icon":"🔧","tags":["dialy"],"title":"壊れた卓上IHを自分で修理する","summary":"IHのスイッチが壊れたので、自分ではんだ付けして直す。","recordMap":null,"lastUpdated":"2022-10-28T12:29:00.000Z"},{"notionID":"fce999af-1379-4dc9-b44f-b2c172f1198d","id":"2022-10-28-the-fools-question","icon":"❓","tags":["dialy"],"title":"教養動画における本当に何もわかってない道化の存在について","summary":"何もわかっていな人が与える安心感と質問することについて。","recordMap":null,"lastUpdated":"2022-11-02T12:37:00.000Z"},{"notionID":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","id":"2022-10-28-virtual-dom","icon":"🌌","tags":["js"],"title":"仮想DOMの差分更新を簡単に実装する","summary":"仮想DOMの簡単な実装を行いました。差分をみて必要なDOMの更新だけ取り出します。","recordMap":{"block":{"9a0af657-87b2-44c6-9b01-8d1e6260fd5e":{"type":"reader","value":{"id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","content":["9b1dacb1-fc86-406f-942e-6527d4183970","504ec738-c8d0-47f8-9d29-c3503c2b65ff","da3a8a8f-f035-46f8-b1a8-8ba5701844c6","31bc048b-e176-4399-b1fd-29522ba71c03","05caab1f-66ca-4d9c-9ee3-1c2067b544e2","73c8779d-ac15-4cd9-a922-5c93ec6bd6fd","ecd4b4a3-967e-4725-bdc5-dd0b36e47b24","bde8ae2c-f473-43bd-9368-8732ffb7f0f0","650cd498-ce0e-4d35-b8e0-2463a7d3f605","27f0f612-c929-45e9-9a00-7aa926ba3b7f","793ca487-3d7b-4123-a006-831571069f43","043b9e88-0d76-4dfd-aa86-a22e3be40149","40fe9d49-34b8-44ea-ac38-226e43fc1533","9f86537c-b177-4a36-97a1-e6ddc38231ed","1e784640-7397-472f-9b8c-f14249f494ed","d47c6e7e-a91b-4ea6-ac84-cd339870fa2e","1959c3f9-1d5c-4fc0-96fa-ef9fe83b58ce","39e7fef7-34cc-4c87-9d65-a83a1e57c2ab","ed32ff29-b2d7-46d8-a43d-e53bed08e0fc","01b292f1-5080-43d2-983f-7d99ba555bb1","e31169a0-6055-4f15-b561-79b0ccfe6cd2","548469b9-12d5-40d3-8c8b-73d5582b89c9","e80eda63-783e-4be9-a411-040f25aa3dd9","3d4b46ca-ab91-4dbb-b7be-db59896df068","10266c82-78c9-41b0-ad4b-9c76b22bbb17","fc87834a-e4f4-43c2-b6fc-8dd050ba563b","758c4a5f-a479-4f98-9eba-28e307592ec0","28bbb975-8cc6-4087-80c4-5d9357311bab","1384fba0-05f9-4883-969c-932f98d035f5","f1bdf581-9d3b-45b9-8034-5c42b1cb1be2","ebf106e7-8d14-4155-9fda-f8d93840c913","e3361b65-bf28-414b-bf4a-e0c4a6d7739f","aa22c58b-79fe-4fe9-bf3a-fd9813e2a073","2646ac6f-4cbe-4ac7-b108-7bf94922245b","acc4c251-ebda-49aa-ab46-9d1e623e30ab"],"properties":{"title":[["仮想DOMの差分更新を簡単に実装する"]]},"format":{"page_icon":"🌌"},"type":"page","created_time":1666948380000,"last_edited_time":1666994340000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"57afe6b6-f3fa-48bf-9a52-f29731547d0d","parent_table":"table"}},"57afe6b6-f3fa-48bf-9a52-f29731547d0d":{"type":"reader","value":{"id":"57afe6b6-f3fa-48bf-9a52-f29731547d0d","properties":{},"format":{},"type":"child_database","created_time":1656396780000,"last_edited_time":1693915800000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true}},"9b1dacb1-fc86-406f-942e-6527d4183970":{"type":"reader","value":{"id":"9b1dacb1-fc86-406f-942e-6527d4183970","properties":{"title":[["ReactやVueで使われている仮想DOMの差分更新を実装しました。Stepを押すと仮想DOMが更新されます。動作デモは↓から。"]]},"format":{"block_color":"default"},"type":"text","created_time":1666948380000,"last_edited_time":1666954080000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"504ec738-c8d0-47f8-9d29-c3503c2b65ff":{"type":"reader","value":{"id":"504ec738-c8d0-47f8-9d29-c3503c2b65ff","properties":{"link":[["https://jsfiddle.net/wass80/273quvp0/337/"]],"description":[["Test your JavaScript, CSS, HTML or CoffeeScript online with JSFiddle code editor."]],"title":[[""]]},"format":{},"type":"bookmark","created_time":1666954080000,"last_edited_time":1666954080000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"da3a8a8f-f035-46f8-b1a8-8ba5701844c6":{"type":"reader","value":{"id":"da3a8a8f-f035-46f8-b1a8-8ba5701844c6","properties":{"title":[["仮想DOMは処理の純粋性を獲得する手段"]]},"format":{"block_color":"default"},"type":"header","created_time":1666948380000,"last_edited_time":1666954080000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"31bc048b-e176-4399-b1fd-29522ba71c03":{"type":"reader","value":{"id":"31bc048b-e176-4399-b1fd-29522ba71c03","properties":{"title":[["JQueryの時代は、ブラウザの状態のDOMを動的に変更していました。状態というのは健康に悪いことが知られています。"]]},"format":{"block_color":"default"},"type":"text","created_time":1666948500000,"last_edited_time":1666951440000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"05caab1f-66ca-4d9c-9ee3-1c2067b544e2":{"type":"reader","value":{"id":"05caab1f-66ca-4d9c-9ee3-1c2067b544e2","properties":{"title":[["コードが扱えるデータ構造ではなく、DOMのインターフェースから構造を触るのは、純粋な関数ではなく、複雑なIOの処理になってしまいます。そして、DOMはどこからでも触れるので、複雑度が上がる一方になります。"]]},"format":{"block_color":"default"},"type":"text","created_time":1666951440000,"last_edited_time":1666951440000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"73c8779d-ac15-4cd9-a922-5c93ec6bd6fd":{"type":"reader","value":{"id":"73c8779d-ac15-4cd9-a922-5c93ec6bd6fd","properties":{"title":[["JQuery(Query) -> Void"]],"language":[["haskell"]]},"format":{},"type":"code","created_time":1666994160000,"last_edited_time":1666994160000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"ecd4b4a3-967e-4725-bdc5-dd0b36e47b24":{"type":"reader","value":{"id":"ecd4b4a3-967e-4725-bdc5-dd0b36e47b24","properties":{"title":[["DOMを操作するインターフェースを制限して、処理の純粋性を取り戻すにはどうすればいいでしょうか。ブラウザの状態であるDOMを直接操作すると、純粋ではなくなります。"]]},"format":{"block_color":"default"},"type":"text","created_time":1666948680000,"last_edited_time":1666951380000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"bde8ae2c-f473-43bd-9368-8732ffb7f0f0":{"type":"reader","value":{"id":"bde8ae2c-f473-43bd-9368-8732ffb7f0f0","properties":{"title":[["単純な結論として、毎回ドキュメント全てのDOMを破棄して作り直すというのがあります。実のところ、作り直す実装も軽いアプリケーションだとそれほど悪くないです。"]]},"format":{"block_color":"default"},"type":"text","created_time":1666951380000,"last_edited_time":1666951380000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"650cd498-ce0e-4d35-b8e0-2463a7d3f605":{"type":"reader","value":{"id":"650cd498-ce0e-4d35-b8e0-2463a7d3f605","properties":{"title":[["View(Data) -> DOM\nRender(DOM) -> Void"]],"language":[["haskell"]]},"format":{},"type":"code","created_time":1666994160000,"last_edited_time":1666994220000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"27f0f612-c929-45e9-9a00-7aa926ba3b7f":{"type":"reader","value":{"id":"27f0f612-c929-45e9-9a00-7aa926ba3b7f","properties":{"title":[["ただ、変更のたびに全てのDOMを作り直すのは流石にコストが無視できないことが多いです。コストを減らすには、DOMの変更部分だけをアクションとして抽出し、アクションをDOMに反映させると良いでしょう。しかし、アクションが複雑になるため、いまいちです。"]]},"format":{"block_color":"default"},"type":"text","created_time":1666948800000,"last_edited_time":1666951380000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"793ca487-3d7b-4123-a006-831571069f43":{"type":"reader","value":{"id":"793ca487-3d7b-4123-a006-831571069f43","properties":{"title":[["View(Data, Action) -> Query\nJQuery(Query) -> Void"]],"language":[["haskell"]]},"format":{},"type":"code","created_time":1666994220000,"last_edited_time":1666994340000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"043b9e88-0d76-4dfd-aa86-a22e3be40149":{"type":"reader","value":{"id":"043b9e88-0d76-4dfd-aa86-a22e3be40149","properties":{"title":[["DOMは一から全部構築したいが、実際のDOMは部分的に変更したいというのが、仮想DOMのモチベーションです。"]]},"format":{"block_color":"default"},"type":"text","created_time":1666948860000,"last_edited_time":1666994220000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"40fe9d49-34b8-44ea-ac38-226e43fc1533":{"type":"reader","value":{"id":"40fe9d49-34b8-44ea-ac38-226e43fc1533","properties":{"title":[["JSが扱えるデータ構造としてDOMを模した仮想DOMを操作するようにします。仮想DOMを実際のDOMに反映します。2回目以降の仮想DOMの反映では、前回の仮想DOMと要素を比較し、差分だけを実際のDOMに反映します。"]]},"format":{"block_color":"default"},"type":"text","created_time":1666951380000,"last_edited_time":1666951380000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"9f86537c-b177-4a36-97a1-e6ddc38231ed":{"type":"reader","value":{"id":"9f86537c-b177-4a36-97a1-e6ddc38231ed","properties":{"title":[["View(Data) -> VirtualDOM\nRender(VirtualDOM, VirtualDOM) -> Void"]],"language":[["haskell"]]},"format":{},"type":"code","created_time":1666994220000,"last_edited_time":1666994280000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"1e784640-7397-472f-9b8c-f14249f494ed":{"type":"reader","value":{"id":"1e784640-7397-472f-9b8c-f14249f494ed","properties":{"title":[["仮想DOMによって、DOMの変更が最小限になり、DOMを操作するインターフェースも1つになりました。"]]},"format":{"block_color":"default"},"type":"text","created_time":1666951380000,"last_edited_time":1666951380000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"d47c6e7e-a91b-4ea6-ac84-cd339870fa2e":{"type":"reader","value":{"id":"d47c6e7e-a91b-4ea6-ac84-cd339870fa2e","properties":{"title":[["Reactの差分更新"]]},"format":{"block_color":"default"},"type":"sub_header","created_time":1666948440000,"last_edited_time":1666948500000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"1959c3f9-1d5c-4fc0-96fa-ef9fe83b58ce":{"type":"reader","value":{"id":"1959c3f9-1d5c-4fc0-96fa-ef9fe83b58ce","properties":{"link":[["https://ja.reactjs.org/docs/reconciliation.html"]],"description":[[""]],"title":[["差分検出処理 – React"]]},"format":{"bookmark_cover":"https://legacy.reactjs.org/logo-og.png"},"type":"bookmark","created_time":1666948500000,"last_edited_time":1666948500000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"39e7fef7-34cc-4c87-9d65-a83a1e57c2ab":{"type":"reader","value":{"id":"39e7fef7-34cc-4c87-9d65-a83a1e57c2ab","properties":{"title":[["Reactでどのように仮想DOMを実装しているかのドキュメントがあります。なぜkeyが必要なのか、などに答えるドキュメントになっています。"]]},"format":{"block_color":"default"},"type":"text","created_time":1666948980000,"last_edited_time":1666950900000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"ed32ff29-b2d7-46d8-a43d-e53bed08e0fc":{"type":"reader","value":{"id":"ed32ff29-b2d7-46d8-a43d-e53bed08e0fc","properties":{"title":[["仮想DOMを実装する"]]},"format":{"block_color":"default"},"type":"header","created_time":1666949040000,"last_edited_time":1666949040000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"01b292f1-5080-43d2-983f-7d99ba555bb1":{"type":"reader","value":{"id":"01b292f1-5080-43d2-983f-7d99ba555bb1","properties":{"title":[["仮想DOMの構造"]]},"format":{"block_color":"default"},"type":"sub_header","created_time":1666949040000,"last_edited_time":1666949040000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"e31169a0-6055-4f15-b561-79b0ccfe6cd2":{"type":"reader","value":{"id":"e31169a0-6055-4f15-b561-79b0ccfe6cd2","properties":{"title":[["仮想DOMはタグ、属性、子DOMの情報を持ちます。domには反映したときの実際のDOMを持っておきます。"]]},"format":{"block_color":"default"},"type":"text","created_time":1666949100000,"last_edited_time":1666950900000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"548469b9-12d5-40d3-8c8b-73d5582b89c9":{"type":"reader","value":{"id":"548469b9-12d5-40d3-8c8b-73d5582b89c9","properties":{"title":[["class VDOM {\n\tconstructor(tag, attrs, children) {\n  \tthis.tag = tag;\n    this.attrs = attrs;\n    this.children = children;\n    this.dom = null;\n  }\n}"]],"language":[["javascript"]]},"format":{},"type":"code","created_time":1666949040000,"last_edited_time":1666951440000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"e80eda63-783e-4be9-a411-040f25aa3dd9":{"type":"reader","value":{"id":"e80eda63-783e-4be9-a411-040f25aa3dd9","properties":{"title":[["仮想DOMを作るためのユーティリティを定義しておきます。jsxだとうまい感じにHTMLタグをコンパイルしてくれるやつですね。"]]},"format":{"block_color":"default"},"type":"text","created_time":1666949160000,"last_edited_time":1666949160000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"3d4b46ca-ab91-4dbb-b7be-db59896df068":{"type":"reader","value":{"id":"3d4b46ca-ab91-4dbb-b7be-db59896df068","properties":{"title":[["テキスト要素はtextタグとして、この実装の仮想DOMでは処理します。"]]},"format":{"block_color":"default"},"type":"text","created_time":1666949280000,"last_edited_time":1666959420000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"10266c82-78c9-41b0-ad4b-9c76b22bbb17":{"type":"reader","value":{"id":"10266c82-78c9-41b0-ad4b-9c76b22bbb17","properties":{"title":[["const d = (tag, attrs, children) => new VDOM(tag, attrs, children);\nconst t = (text) => new VDOM(\"text\", {text}, [])\n\nconst dom = d(\"span\", {}, [t(\"Hello! \")]);"]],"language":[["javascript"]]},"format":{},"type":"code","created_time":1666949040000,"last_edited_time":1666949220000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"fc87834a-e4f4-43c2-b6fc-8dd050ba563b":{"type":"reader","value":{"id":"fc87834a-e4f4-43c2-b6fc-8dd050ba563b","properties":{"title":[["仮想DOMの描画"]]},"format":{"block_color":"default"},"type":"sub_header","created_time":1666949220000,"last_edited_time":1666949220000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"758c4a5f-a479-4f98-9eba-28e307592ec0":{"type":"reader","value":{"id":"758c4a5f-a479-4f98-9eba-28e307592ec0","properties":{"title":[["仮想DOMを実際のDOMに反映するのは、仮想DOMの木構造をたどるだけで完了します。"]]},"format":{"block_color":"default"},"type":"text","created_time":1666949220000,"last_edited_time":1666949220000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"28bbb975-8cc6-4087-80c4-5d9357311bab":{"type":"reader","value":{"id":"28bbb975-8cc6-4087-80c4-5d9357311bab","properties":{"title":[["class VDOM {\n  render(parent) {\n    // this.domを作る\n    this.initElement();\n    this.updateAttrs();\n    // 親要素にdomを挿入する\n    parent.appendChild(this.dom);\n    // 子要素を反映する\n    for (let child of this.children) {\n\t\t\tchild.render(this.dom);\n    }\n  }\n}\n\nconst parent = document.getElementById(\"main\");\ndom.render(parent);"]],"language":[["javascript"]]},"format":{},"type":"code","created_time":1666949220000,"last_edited_time":1666956240000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"1384fba0-05f9-4883-969c-932f98d035f5":{"type":"reader","value":{"id":"1384fba0-05f9-4883-969c-932f98d035f5","properties":{"title":[["仮想DOMの更新"]]},"format":{"block_color":"default"},"type":"sub_header","created_time":1666949220000,"last_edited_time":1666949280000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"f1bdf581-9d3b-45b9-8034-5c42b1cb1be2":{"type":"reader","value":{"id":"f1bdf581-9d3b-45b9-8034-5c42b1cb1be2","properties":{"title":[["差分更新が仮想DOMの真髄です。"]]},"format":{"block_color":"default"},"type":"text","created_time":1666949340000,"last_edited_time":1666949400000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"ebf106e7-8d14-4155-9fda-f8d93840c913":{"type":"reader","value":{"id":"ebf106e7-8d14-4155-9fda-f8d93840c913","properties":{"title":[["タグが変わっていたらDOMを1から作り直します。タグが同じであれば、属性だけ更新します。"]]},"format":{"block_color":"default"},"type":"text","created_time":1666949400000,"last_edited_time":1666949400000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"e3361b65-bf28-414b-bf4a-e0c4a6d7739f":{"type":"reader","value":{"id":"e3361b65-bf28-414b-bf4a-e0c4a6d7739f","properties":{"title":[["子要素については、変更があるところは変更し、削除と追加を行います。"]]},"format":{"block_color":"default"},"type":"text","created_time":1666949400000,"last_edited_time":1666949400000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"aa22c58b-79fe-4fe9-bf3a-fd9813e2a073":{"type":"reader","value":{"id":"aa22c58b-79fe-4fe9-bf3a-fd9813e2a073","properties":{"title":[["class VDOM {\n    update(parent, after) {\n    // タグが違うので作り直し\n    if (this.tag !== after.tag || this.tag === \"text\") {\n   \t  after.initElement();\n      this.dom.replaceWith(after.dom);\n      this.dom = after.dom;\n      this.tag = after.tag;\n      this.children = [];\n    }\n    // 属性の更新\n    this.attrs = after.attrs;\n    this.updateAttrs();\n    if (after.tag === \"text\") return;\n    // 子要素のupdate\n    const [befores, afters] = [this.children.length, after.children.length];\n    const updates = Math.min(befores, afters);\n    // 新旧で同じ数までは更新処理\n    for (let i = 0; i < updates; i++) {\n      this.children[i].update(this.dom, after.children[i]);\n    }\n    // 減ったら削除\n    for (let i = updates; i < befores; i++) {\n      this.children[i].dom.remove();\n      this.children.splice(i, 1);\n    }\n    // 増えたら挿入\n    for (let i = updates; i < afters; i++) {\n      after.children[i].render(this.dom);\n      this.children.push(after.children[i]);\n    };\n  }\n}\nlet new_dom = d(\"span\", {style:\"color: crimson;\"}, [t(\"How are you? \")]);\n dom.update(parent, new_dom);"]],"language":[["javascript"]]},"format":{},"type":"code","created_time":1666949340000,"last_edited_time":1666956240000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"2646ac6f-4cbe-4ac7-b108-7bf94922245b":{"type":"reader","value":{"id":"2646ac6f-4cbe-4ac7-b108-7bf94922245b","properties":{"title":[["まとめ"]]},"format":{"block_color":"default"},"type":"header","created_time":1666949520000,"last_edited_time":1666949520000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}},"acc4c251-ebda-49aa-ab46-9d1e623e30ab":{"type":"reader","value":{"id":"acc4c251-ebda-49aa-ab46-9d1e623e30ab","properties":{"title":[["仮想DOMの簡単な実装を行いました。実用的にはkeyを用いたDOMの同一判定などがあると、なお効率的でしょう。仮想DOMと"],["前回のミニVue",[["a","https://memo.wass80.xyz/2022-10-28-vue-computed/"]]],["を組み合わせれば、そこそこ実用的でしょう。次回はReactの関数コンポーネント編です。"]]},"format":{"block_color":"default"},"type":"text","created_time":1666949520000,"last_edited_time":1666956300000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent_table":"block"}}},"collection":{},"collection_view":{},"collection_query":{},"signed_urls":{},"notion_user":{},"raw":{"page":{"object":"page","id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","created_time":"2022-10-28T09:13:00.000Z","last_edited_time":"2022-10-28T21:59:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"cover":null,"icon":{"type":"emoji","emoji":"🌌"},"parent":{"type":"database_id","database_id":"57afe6b6-f3fa-48bf-9a52-f29731547d0d"},"archived":false,"properties":{"ID":{"id":"cRSs","type":"rich_text","rich_text":[{"type":"text","text":{"content":"virtual-dom","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"virtual-dom","href":null}]},"Summary":{"id":"e%3BSi","type":"rich_text","rich_text":[{"type":"text","text":{"content":"仮想DOMの簡単な実装を行いました。差分をみて必要なDOMの更新だけ取り出します。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"仮想DOMの簡単な実装を行いました。差分をみて必要なDOMの更新だけ取り出します。","href":null}]},"Created":{"id":"nlFt","type":"created_time","created_time":"2022-10-28T09:13:00.000Z"},"Tags":{"id":"pJSo","type":"multi_select","multi_select":[{"id":"94a95c89-9388-432d-933a-742046b697ea","name":"js","color":"yellow"}]},"PublishedAt":{"id":"wN%3Dw","type":"date","date":{"start":"2022-10-28","end":null,"time_zone":null}},"Name":{"id":"title","type":"title","title":[{"type":"text","text":{"content":"仮想DOMの差分更新を簡単に実装する","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"仮想DOMの差分更新を簡単に実装する","href":null}]}},"url":"https://www.notion.so/DOM-9a0af65787b244c69b018d1e6260fd5e","public_url":null},"block":{"object":"block","id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","parent":{"type":"database_id","database_id":"57afe6b6-f3fa-48bf-9a52-f29731547d0d"},"created_time":"2022-10-28T09:13:00.000Z","last_edited_time":"2022-10-28T21:59:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":true,"archived":false,"type":"child_page","child_page":{"title":"仮想DOMの差分更新を簡単に実装する"}},"children":[{"object":"block","id":"9b1dacb1-fc86-406f-942e-6527d4183970","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:13:00.000Z","last_edited_time":"2022-10-28T10:48:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"ReactやVueで使われている仮想DOMの差分更新を実装しました。Stepを押すと仮想DOMが更新されます。動作デモは↓から。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"ReactやVueで使われている仮想DOMの差分更新を実装しました。Stepを押すと仮想DOMが更新されます。動作デモは↓から。","href":null}],"color":"default"}},{"object":"block","id":"504ec738-c8d0-47f8-9d29-c3503c2b65ff","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T10:48:00.000Z","last_edited_time":"2022-10-28T10:48:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"bookmark","bookmark":{"caption":[],"url":"https://jsfiddle.net/wass80/273quvp0/337/"}},{"object":"block","id":"da3a8a8f-f035-46f8-b1a8-8ba5701844c6","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:13:00.000Z","last_edited_time":"2022-10-28T10:48:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"heading_1","heading_1":{"rich_text":[{"type":"text","text":{"content":"仮想DOMは処理の純粋性を獲得する手段","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"仮想DOMは処理の純粋性を獲得する手段","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"31bc048b-e176-4399-b1fd-29522ba71c03","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:15:00.000Z","last_edited_time":"2022-10-28T10:04:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"JQueryの時代は、ブラウザの状態のDOMを動的に変更していました。状態というのは健康に悪いことが知られています。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"JQueryの時代は、ブラウザの状態のDOMを動的に変更していました。状態というのは健康に悪いことが知られています。","href":null}],"color":"default"}},{"object":"block","id":"05caab1f-66ca-4d9c-9ee3-1c2067b544e2","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T10:04:00.000Z","last_edited_time":"2022-10-28T10:04:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"コードが扱えるデータ構造ではなく、DOMのインターフェースから構造を触るのは、純粋な関数ではなく、複雑なIOの処理になってしまいます。そして、DOMはどこからでも触れるので、複雑度が上がる一方になります。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"コードが扱えるデータ構造ではなく、DOMのインターフェースから構造を触るのは、純粋な関数ではなく、複雑なIOの処理になってしまいます。そして、DOMはどこからでも触れるので、複雑度が上がる一方になります。","href":null}],"color":"default"}},{"object":"block","id":"73c8779d-ac15-4cd9-a922-5c93ec6bd6fd","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T21:56:00.000Z","last_edited_time":"2022-10-28T21:56:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"JQuery(Query) -> Void","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"JQuery(Query) -> Void","href":null}],"language":"haskell"}},{"object":"block","id":"ecd4b4a3-967e-4725-bdc5-dd0b36e47b24","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:18:00.000Z","last_edited_time":"2022-10-28T10:03:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"DOMを操作するインターフェースを制限して、処理の純粋性を取り戻すにはどうすればいいでしょうか。ブラウザの状態であるDOMを直接操作すると、純粋ではなくなります。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"DOMを操作するインターフェースを制限して、処理の純粋性を取り戻すにはどうすればいいでしょうか。ブラウザの状態であるDOMを直接操作すると、純粋ではなくなります。","href":null}],"color":"default"}},{"object":"block","id":"bde8ae2c-f473-43bd-9368-8732ffb7f0f0","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T10:03:00.000Z","last_edited_time":"2022-10-28T10:03:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"単純な結論として、毎回ドキュメント全てのDOMを破棄して作り直すというのがあります。実のところ、作り直す実装も軽いアプリケーションだとそれほど悪くないです。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"単純な結論として、毎回ドキュメント全てのDOMを破棄して作り直すというのがあります。実のところ、作り直す実装も軽いアプリケーションだとそれほど悪くないです。","href":null}],"color":"default"}},{"object":"block","id":"650cd498-ce0e-4d35-b8e0-2463a7d3f605","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T21:56:00.000Z","last_edited_time":"2022-10-28T21:57:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"View(Data) -> DOM\nRender(DOM) -> Void","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"View(Data) -> DOM\nRender(DOM) -> Void","href":null}],"language":"haskell"}},{"object":"block","id":"27f0f612-c929-45e9-9a00-7aa926ba3b7f","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:20:00.000Z","last_edited_time":"2022-10-28T10:03:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"ただ、変更のたびに全てのDOMを作り直すのは流石にコストが無視できないことが多いです。コストを減らすには、DOMの変更部分だけをアクションとして抽出し、アクションをDOMに反映させると良いでしょう。しかし、アクションが複雑になるため、いまいちです。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"ただ、変更のたびに全てのDOMを作り直すのは流石にコストが無視できないことが多いです。コストを減らすには、DOMの変更部分だけをアクションとして抽出し、アクションをDOMに反映させると良いでしょう。しかし、アクションが複雑になるため、いまいちです。","href":null}],"color":"default"}},{"object":"block","id":"793ca487-3d7b-4123-a006-831571069f43","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T21:57:00.000Z","last_edited_time":"2022-10-28T21:59:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"View(Data, Action) -> Query\nJQuery(Query) -> Void","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"View(Data, Action) -> Query\nJQuery(Query) -> Void","href":null}],"language":"haskell"}},{"object":"block","id":"043b9e88-0d76-4dfd-aa86-a22e3be40149","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:21:00.000Z","last_edited_time":"2022-10-28T21:57:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"DOMは一から全部構築したいが、実際のDOMは部分的に変更したいというのが、仮想DOMのモチベーションです。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"DOMは一から全部構築したいが、実際のDOMは部分的に変更したいというのが、仮想DOMのモチベーションです。","href":null}],"color":"default"}},{"object":"block","id":"40fe9d49-34b8-44ea-ac38-226e43fc1533","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T10:03:00.000Z","last_edited_time":"2022-10-28T10:03:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"JSが扱えるデータ構造としてDOMを模した仮想DOMを操作するようにします。仮想DOMを実際のDOMに反映します。2回目以降の仮想DOMの反映では、前回の仮想DOMと要素を比較し、差分だけを実際のDOMに反映します。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"JSが扱えるデータ構造としてDOMを模した仮想DOMを操作するようにします。仮想DOMを実際のDOMに反映します。2回目以降の仮想DOMの反映では、前回の仮想DOMと要素を比較し、差分だけを実際のDOMに反映します。","href":null}],"color":"default"}},{"object":"block","id":"9f86537c-b177-4a36-97a1-e6ddc38231ed","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T21:57:00.000Z","last_edited_time":"2022-10-28T21:58:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"View(Data) -> VirtualDOM\nRender(VirtualDOM, VirtualDOM) -> Void","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"View(Data) -> VirtualDOM\nRender(VirtualDOM, VirtualDOM) -> Void","href":null}],"language":"haskell"}},{"object":"block","id":"1e784640-7397-472f-9b8c-f14249f494ed","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T10:03:00.000Z","last_edited_time":"2022-10-28T10:03:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"仮想DOMによって、DOMの変更が最小限になり、DOMを操作するインターフェースも1つになりました。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"仮想DOMによって、DOMの変更が最小限になり、DOMを操作するインターフェースも1つになりました。","href":null}],"color":"default"}},{"object":"block","id":"d47c6e7e-a91b-4ea6-ac84-cd339870fa2e","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:14:00.000Z","last_edited_time":"2022-10-28T09:15:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"Reactの差分更新","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Reactの差分更新","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"1959c3f9-1d5c-4fc0-96fa-ef9fe83b58ce","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:15:00.000Z","last_edited_time":"2022-10-28T09:15:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"bookmark","bookmark":{"caption":[],"url":"https://ja.reactjs.org/docs/reconciliation.html"}},{"object":"block","id":"39e7fef7-34cc-4c87-9d65-a83a1e57c2ab","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:23:00.000Z","last_edited_time":"2022-10-28T09:55:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Reactでどのように仮想DOMを実装しているかのドキュメントがあります。なぜkeyが必要なのか、などに答えるドキュメントになっています。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Reactでどのように仮想DOMを実装しているかのドキュメントがあります。なぜkeyが必要なのか、などに答えるドキュメントになっています。","href":null}],"color":"default"}},{"object":"block","id":"ed32ff29-b2d7-46d8-a43d-e53bed08e0fc","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:24:00.000Z","last_edited_time":"2022-10-28T09:24:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"heading_1","heading_1":{"rich_text":[{"type":"text","text":{"content":"仮想DOMを実装する","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"仮想DOMを実装する","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"01b292f1-5080-43d2-983f-7d99ba555bb1","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:24:00.000Z","last_edited_time":"2022-10-28T09:24:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"仮想DOMの構造","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"仮想DOMの構造","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"e31169a0-6055-4f15-b561-79b0ccfe6cd2","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:25:00.000Z","last_edited_time":"2022-10-28T09:55:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"仮想DOMはタグ、属性、子DOMの情報を持ちます。domには反映したときの実際のDOMを持っておきます。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"仮想DOMはタグ、属性、子DOMの情報を持ちます。domには反映したときの実際のDOMを持っておきます。","href":null}],"color":"default"}},{"object":"block","id":"548469b9-12d5-40d3-8c8b-73d5582b89c9","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:24:00.000Z","last_edited_time":"2022-10-28T10:04:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"class VDOM {\n\tconstructor(tag, attrs, children) {\n  \tthis.tag = tag;\n    this.attrs = attrs;\n    this.children = children;\n    this.dom = null;\n  }\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"class VDOM {\n\tconstructor(tag, attrs, children) {\n  \tthis.tag = tag;\n    this.attrs = attrs;\n    this.children = children;\n    this.dom = null;\n  }\n}","href":null}],"language":"javascript"}},{"object":"block","id":"e80eda63-783e-4be9-a411-040f25aa3dd9","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:26:00.000Z","last_edited_time":"2022-10-28T09:26:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"仮想DOMを作るためのユーティリティを定義しておきます。jsxだとうまい感じにHTMLタグをコンパイルしてくれるやつですね。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"仮想DOMを作るためのユーティリティを定義しておきます。jsxだとうまい感じにHTMLタグをコンパイルしてくれるやつですね。","href":null}],"color":"default"}},{"object":"block","id":"3d4b46ca-ab91-4dbb-b7be-db59896df068","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:28:00.000Z","last_edited_time":"2022-10-28T12:17:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"テキスト要素はtextタグとして、この実装の仮想DOMでは処理します。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"テキスト要素はtextタグとして、この実装の仮想DOMでは処理します。","href":null}],"color":"default"}},{"object":"block","id":"10266c82-78c9-41b0-ad4b-9c76b22bbb17","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:24:00.000Z","last_edited_time":"2022-10-28T09:27:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"const d = (tag, attrs, children) => new VDOM(tag, attrs, children);\nconst t = (text) => new VDOM(\"text\", {text}, [])\n\nconst dom = d(\"span\", {}, [t(\"Hello! \")]);","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"const d = (tag, attrs, children) => new VDOM(tag, attrs, children);\nconst t = (text) => new VDOM(\"text\", {text}, [])\n\nconst dom = d(\"span\", {}, [t(\"Hello! \")]);","href":null}],"language":"javascript"}},{"object":"block","id":"fc87834a-e4f4-43c2-b6fc-8dd050ba563b","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:27:00.000Z","last_edited_time":"2022-10-28T09:27:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"仮想DOMの描画","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"仮想DOMの描画","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"758c4a5f-a479-4f98-9eba-28e307592ec0","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:27:00.000Z","last_edited_time":"2022-10-28T09:27:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"仮想DOMを実際のDOMに反映するのは、仮想DOMの木構造をたどるだけで完了します。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"仮想DOMを実際のDOMに反映するのは、仮想DOMの木構造をたどるだけで完了します。","href":null}],"color":"default"}},{"object":"block","id":"28bbb975-8cc6-4087-80c4-5d9357311bab","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:27:00.000Z","last_edited_time":"2022-10-28T11:24:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"class VDOM {\n  render(parent) {\n    // this.domを作る\n    this.initElement();\n    this.updateAttrs();\n    // 親要素にdomを挿入する\n    parent.appendChild(this.dom);\n    // 子要素を反映する\n    for (let child of this.children) {\n\t\t\tchild.render(this.dom);\n    }\n  }\n}\n\nconst parent = document.getElementById(\"main\");\ndom.render(parent);","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"class VDOM {\n  render(parent) {\n    // this.domを作る\n    this.initElement();\n    this.updateAttrs();\n    // 親要素にdomを挿入する\n    parent.appendChild(this.dom);\n    // 子要素を反映する\n    for (let child of this.children) {\n\t\t\tchild.render(this.dom);\n    }\n  }\n}\n\nconst parent = document.getElementById(\"main\");\ndom.render(parent);","href":null}],"language":"javascript"}},{"object":"block","id":"1384fba0-05f9-4883-969c-932f98d035f5","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:27:00.000Z","last_edited_time":"2022-10-28T09:28:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"仮想DOMの更新","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"仮想DOMの更新","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"f1bdf581-9d3b-45b9-8034-5c42b1cb1be2","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:29:00.000Z","last_edited_time":"2022-10-28T09:30:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"差分更新が仮想DOMの真髄です。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"差分更新が仮想DOMの真髄です。","href":null}],"color":"default"}},{"object":"block","id":"ebf106e7-8d14-4155-9fda-f8d93840c913","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:30:00.000Z","last_edited_time":"2022-10-28T09:30:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"タグが変わっていたらDOMを1から作り直します。タグが同じであれば、属性だけ更新します。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"タグが変わっていたらDOMを1から作り直します。タグが同じであれば、属性だけ更新します。","href":null}],"color":"default"}},{"object":"block","id":"e3361b65-bf28-414b-bf4a-e0c4a6d7739f","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:30:00.000Z","last_edited_time":"2022-10-28T09:30:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"子要素については、変更があるところは変更し、削除と追加を行います。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"子要素については、変更があるところは変更し、削除と追加を行います。","href":null}],"color":"default"}},{"object":"block","id":"aa22c58b-79fe-4fe9-bf3a-fd9813e2a073","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:29:00.000Z","last_edited_time":"2022-10-28T11:24:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"class VDOM {\n    update(parent, after) {\n    // タグが違うので作り直し\n    if (this.tag !== after.tag || this.tag === \"text\") {\n   \t  after.initElement();\n      this.dom.replaceWith(after.dom);\n      this.dom = after.dom;\n      this.tag = after.tag;\n      this.children = [];\n    }\n    // 属性の更新\n    this.attrs = after.attrs;\n    this.updateAttrs();\n    if (after.tag === \"text\") return;\n    // 子要素のupdate\n    const [befores, afters] = [this.children.length, after.children.length];\n    const updates = Math.min(befores, afters);\n    // 新旧で同じ数までは更新処理\n    for (let i = 0; i < updates; i++) {\n      this.children[i].update(this.dom, after.children[i]);\n    }\n    // 減ったら削除\n    for (let i = updates; i < befores; i++) {\n      this.children[i].dom.remove();\n      this.children.splice(i, 1);\n    }\n    // 増えたら挿入\n    for (let i = updates; i < afters; i++) {\n      after.children[i].render(this.dom);\n      this.children.push(after.children[i]);\n    };\n  }\n}\nlet new_dom = d(\"span\", {style:\"color: crimson;\"}, [t(\"How are you? \")]);\n dom.update(parent, new_dom);","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"class VDOM {\n    update(parent, after) {\n    // タグが違うので作り直し\n    if (this.tag !== after.tag || this.tag === \"text\") {\n   \t  after.initElement();\n      this.dom.replaceWith(after.dom);\n      this.dom = after.dom;\n      this.tag = after.tag;\n      this.children = [];\n    }\n    // 属性の更新\n    this.attrs = after.attrs;\n    this.updateAttrs();\n    if (after.tag === \"text\") return;\n    // 子要素のupdate\n    const [befores, afters] = [this.children.length, after.children.length];\n    const updates = Math.min(befores, afters);\n    // 新旧で同じ数までは更新処理\n    for (let i = 0; i < updates; i++) {\n      this.children[i].update(this.dom, after.children[i]);\n    }\n    // 減ったら削除\n    for (let i = updates; i < befores; i++) {\n      this.children[i].dom.remove();\n      this.children.splice(i, 1);\n    }\n    // 増えたら挿入\n    for (let i = updates; i < afters; i++) {\n      after.children[i].render(this.dom);\n      this.children.push(after.children[i]);\n    };\n  }\n}\nlet new_dom = d(\"span\", {style:\"color: crimson;\"}, [t(\"How are you? \")]);\n dom.update(parent, new_dom);","href":null}],"language":"javascript"}},{"object":"block","id":"2646ac6f-4cbe-4ac7-b108-7bf94922245b","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:32:00.000Z","last_edited_time":"2022-10-28T09:32:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"heading_1","heading_1":{"rich_text":[{"type":"text","text":{"content":"まとめ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"まとめ","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"acc4c251-ebda-49aa-ab46-9d1e623e30ab","parent":{"type":"page_id","page_id":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e"},"created_time":"2022-10-28T09:32:00.000Z","last_edited_time":"2022-10-28T11:25:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"仮想DOMの簡単な実装を行いました。実用的にはkeyを用いたDOMの同一判定などがあると、なお効率的でしょう。仮想DOMと","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"仮想DOMの簡単な実装を行いました。実用的にはkeyを用いたDOMの同一判定などがあると、なお効率的でしょう。仮想DOMと","href":null},{"type":"text","text":{"content":"前回のミニVue","link":{"url":"https://memo.wass80.xyz/2022-10-28-vue-computed/"}},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"前回のミニVue","href":"https://memo.wass80.xyz/2022-10-28-vue-computed/"},{"type":"text","text":{"content":"を組み合わせれば、そこそこ実用的でしょう。次回はReactの関数コンポーネント編です。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"を組み合わせれば、そこそこ実用的でしょう。次回はReactの関数コンポーネント編です。","href":null}],"color":"default"}}]}},"lastUpdated":"2022-10-28T21:59:00.000Z"},{"notionID":"5d9d1a5b-f3ba-4562-a71d-126d16803f1c","id":"2022-10-28-vue-computed","icon":"💚","tags":["vue","js"],"title":"Vueっぽいものを実装してComputedの仕組みを探る","summary":"VueのComputedのやや魔法っぽい、依存関係の自動導出についての仕組みを、簡単な実装で解説しました。","recordMap":null,"lastUpdated":"2022-11-03T13:10:00.000Z"},{"notionID":"5b75289d-a98f-4a25-a02b-4290f87cc16b","id":"2022-10-05-tictactoe-random","icon":"⭕","tags":["game"],"title":"三目並べをランダムに指したときの先手の勝利確率は?","summary":"まったくもってランダムに三目並べを行うときに先手はどれくらい有利か","recordMap":null,"lastUpdated":"2022-11-24T10:42:00.000Z"},{"notionID":"b34f2185-860f-46e4-adae-b6a824a7c06b","id":"2022-08-07-ray-tracing-in-one-weekend","icon":"🔆","tags":["rust"],"title":"『Ray Tracing in One Weekend』をやった","summary":"レイトレーシングを実装する","recordMap":null,"lastUpdated":"2022-08-09T11:35:00.000Z"},{"notionID":"9137f946-c9f2-495a-9465-e22c317717bf","id":"2022-08-09-infinite-turtle-brainfuck","icon":"🧠","tags":["game"],"title":"コンベアで計算する『Infinite Turtles』でBrainfuckインタプリタを実装した","summary":"ベルトコンベアでbrainfuckを計算する様子","recordMap":null,"lastUpdated":"2022-10-28T12:28:00.000Z"},{"notionID":"7b60f0a0-848e-40d5-be90-9f28d934fbb2","id":"2022-10-25-rust-c-compiler","icon":"🦀","tags":["rust","compiler"],"title":"Rustで「低レイヤを知りたい人のためのCコンパイラ作成入門」を少しやる","summary":"コンパイラ作りを思い出す","recordMap":null,"lastUpdated":"2022-10-25T09:06:00.000Z"},{"notionID":"02f7fec3-88ee-4275-bb46-057a81153eba","id":"2022-07-24-isucon12-qualified","icon":"🎉","tags":["isucon","web"],"title":"ISUCON12予選突破した。 :old_noto_innocent: ","summary":"ISUCON12予選突破できた。そのまとめ。","recordMap":null,"lastUpdated":"2022-07-28T02:00:00.000Z"},{"notionID":"8837459a-5a44-48f1-ba64-3764c7cd659b","id":"2022-08-08-inifinite-turtles","icon":"🐢","tags":["game"],"title":"自動化コンベアでチューリング完全を目指す『Infinite Turtles』の紹介","summary":"steamのゲームの紹介。ベルトコンベアでいろんな問題を解く。","recordMap":null,"lastUpdated":"2022-10-28T12:29:00.000Z"},{"notionID":"31901beb-64fe-4576-8211-e14654a1c0c7","id":"2022-07-13-notion-blog","icon":"📝","tags":["notion","nextjs"],"title":"Notionでもブログを書けるように","summary":"Notionからnextjsでブログを生成する","recordMap":null,"lastUpdated":"2023-05-26T05:38:00.000Z"}]},"__N_SSG":true}