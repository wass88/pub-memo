{"pageProps":{"id":"2023-05-19-b-plus-tree-database","notion":[{"notionID":"6858b08e-715d-42a2-a59c-5efa486bee04","id":"2023-09-05-pga-3d","icon":"🧬","tags":["math"],"title":"投影幾何学的代数PGAによる3次元計算が楽で面白い","summary":"行列とかクォータニオンとか3次元平面とか全部一緒くたにあつかえるすごいヤツ","recordMap":null,"lastUpdated":"2023-09-06T03:47:00.000Z"},{"notionID":"89c14752-8289-4501-92db-370984ba07a1","id":"2023-07-02-yoneda-hom-functor","icon":"🔄","tags":["math","category"],"title":"ようやく理解した米田の補題とHom関手","summary":"圏論の基本と米田の補題がどう嬉しいのか。証明は書いてありません。","recordMap":null,"lastUpdated":"2023-07-03T14:23:00.000Z"},{"notionID":"41b05590-7ee6-4ad2-8def-f14ffd551a4d","id":"2023-05-26-poisson-collision","icon":"🎯","tags":["dev","math"],"title":"[訂正あり] 秒単位で衝突するファイル名をミリ秒単位に改善すると、1000倍安全になる","summary":"訂正しました。誕生日のパラドックスを考えると1000倍の安全性は手に入らない気がするが…？","recordMap":null,"lastUpdated":"2023-05-30T02:20:00.000Z"},{"notionID":"6d4a7c25-192f-4cc8-b642-fc10a18253ab","id":"2023-05-24-kariuchi-solver","icon":"🤞","tags":["dev","game"],"title":"奈良時代のボドゲ「かりうち」のソルバー","summary":"ショートカットが強すぎる気がしたので、モンテカルロ法のソルバーを書いた。","recordMap":null,"lastUpdated":"2023-05-24T04:10:00.000Z"},{"notionID":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","id":"2023-05-19-b-plus-tree-database","icon":"📃","tags":["dev","rust","web"],"title":"B+木を実装してデータベースとRustのRefCellに詳しくなる","summary":"Rustで簡単なデータベースを書く","recordMap":{"block":{"c7838b51-d30e-48e7-9256-8a5e66d0ddf9":{"type":"reader","value":{"id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","content":["297ff104-6320-487e-a47a-2ea54ff2aea0","4ed8bb93-a570-4f86-ae5d-9c404a03a4cf","fb90be56-d1cd-4037-9acf-546f7e29e8b0","cd49f3a9-b107-4ce4-a567-d3bccbe82365","b2b58cbc-412e-4093-8b54-e49fc46fc52f","c66a522d-a79d-4396-83d9-ac72b09a1497","02ef0335-e163-4310-b139-a0c32d4732c7","d4bb9588-7837-43b3-b7f9-7140ac120f4c","3ea402a3-a0e0-4b2d-b057-5c87593afe04","f941b05f-a47a-4686-99f1-993ebf93e5c8","fcbc3fa2-f7da-4641-a087-5db262f15f5e","da2a1773-698b-4adf-8d94-6d095ca85ca2","b63b9338-09a1-4d23-bf87-aa6fcc2027d5","1a1a2cbb-4f53-4fed-aca6-ba712bcfbbec","b90fab97-67f7-4f49-90b3-6fc2f876b117","7ea0bbbf-5165-4708-9898-256bd9988bf8","02ba69cf-8de2-4f82-a89d-af059cdeb125","d0ee405d-0a54-4a40-871a-6a2b005c1d7f","2e49fcf4-e4d2-4b2f-8c1a-a14a1eb6cb03","01d1b3ec-004e-4b81-be2e-75c50c2b4dfb","64c2072d-5add-4876-828a-901f7c1ef40c","09fc8417-0b8d-461c-b82d-32be01e8179c","ad77051a-a98d-49d5-bef8-c7a909b0d588","1cfa7818-c156-4054-b9b3-e41d7d4344a1","a6f8c57b-3e0d-4106-925f-c22d9463bfd2","0d60a476-91ed-4c99-a889-c4066c35b22d","2ed6a76b-8cc9-458f-9529-0808bd880d3b","7acaae7b-722c-4357-8fb5-beb36d3ca83c","db6170fb-01e4-4b6c-b571-19b62408f697","28f95c78-36dd-46c5-8995-9d82db56ff86","f7e54841-2df0-41aa-a482-c5580ca69fdf","34d6d1db-10d3-47cb-80c3-c3becd067caa","53b1554b-91aa-4bf9-8742-d3bac7ff5bd0","e10f0982-db06-4b38-a578-e47691de0262","7eea03f2-1aaa-4c1b-8fc9-7c5f846cc9bf","826656db-420e-4ee5-b997-3c2354e2f68d","f2545c8c-a7fe-4848-b2f5-9e1cbbf61c13","83b9fb04-d805-46c8-b05c-363ca8f9f162"],"properties":{"title":[["B+木を実装してデータベースとRustのRefCellに詳しくなる"]]},"format":{"page_icon":"📃"},"type":"page","created_time":1684479660000,"last_edited_time":1684486800000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"57afe6b6-f3fa-48bf-9a52-f29731547d0d","parent_table":"table"}},"57afe6b6-f3fa-48bf-9a52-f29731547d0d":{"type":"reader","value":{"id":"57afe6b6-f3fa-48bf-9a52-f29731547d0d","properties":{},"format":{},"type":"child_database","created_time":1656396780000,"last_edited_time":1693915800000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true}},"297ff104-6320-487e-a47a-2ea54ff2aea0":{"type":"reader","value":{"id":"297ff104-6320-487e-a47a-2ea54ff2aea0","properties":{"link":[["https://github.com/wass88/minisql"]],"description":[["How Does a Database Work? の Rust 実装. Contribute to wass88/minisql development by creating an account on GitHub."]],"title":[["GitHub - wass88/minisql: How Does a Database Work? の Rust 実装"]]},"format":{"bookmark_cover":"https://opengraph.githubassets.com/084f5a6129bb0f528fb574ce6d80915ccce9b01fa084440cb8bb286f81e7a34b/wass88/minisql"},"type":"bookmark","created_time":1684479780000,"last_edited_time":1684479780000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"4ed8bb93-a570-4f86-ae5d-9c404a03a4cf":{"type":"reader","value":{"id":"4ed8bb93-a570-4f86-ae5d-9c404a03a4cf","properties":{"title":[["挿入、変更、削除ができるB+木のRust実装です。"]]},"format":{"block_color":"default"},"type":"text","created_time":1684480920000,"last_edited_time":1684482960000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"fb90be56-d1cd-4037-9acf-546f7e29e8b0":{"type":"reader","value":{"id":"fb90be56-d1cd-4037-9acf-546f7e29e8b0","properties":{"title":[["$ cargo run run.db\n> insert 1 wass wass@example.com\nRow { id: 1, name: wass, email: wass@example.com }\n> insert 12 banana banana@example.com\nRow { id: 12, name: banana, email: banana@example.com }\n> insert 5 corn corn@example.coom\nRow { id: 5, name: corn, email: corn@example.coom }\n> .btree\nTable { root_page_num: 1 }\nNode 1 NodeType: Leaf, IsRoot: Yes, Parent: 0 ( NumCells: 3, NextLeaf 0 )\n[1] Row { id: 1, name: wass, email: wass@example.com }\n[5] Row { id: 5, name: corn, email: corn@example.coom }\n[12] Row { id: 12, name: banana, email: banana@example.com }\n\n> select 1\nRow { id: 1, name: wass, email: wass@example.com }\n\n> delete 5\n> .btree\nTable { root_page_num: 1 }\nNode 1 NodeType: Leaf, IsRoot: Yes, Parent: 0 ( NumCells: 3, NextLeaf 0 )\n[1] Row { id: 1, name: wass, email: wass@example.com }\n[12] Row { id: 12, name: banana, email: banana@example.com }"]],"language":[["shell"]]},"format":{},"type":"code","created_time":1684480500000,"last_edited_time":1684480560000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"cd49f3a9-b107-4ce4-a567-d3bccbe82365":{"type":"reader","value":{"id":"cd49f3a9-b107-4ce4-a567-d3bccbe82365","properties":{"link":[["https://cstack.github.io/db_tutorial/"]],"description":[["Writing a sqlite clone from scratch in C"]],"title":[["How Does a Database Work?"]]},"format":{},"type":"bookmark","created_time":1684479780000,"last_edited_time":1684479780000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"b2b58cbc-412e-4093-8b54-e49fc46fc52f":{"type":"reader","value":{"id":"b2b58cbc-412e-4093-8b54-e49fc46fc52f","properties":{"title":[["How Does a Database Work?",[["b"]]],["を読んで、B+木をRustで実装しました。"]]},"format":{"block_color":"default"},"type":"text","created_time":1684479780000,"last_edited_time":1684483320000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"c66a522d-a79d-4396-83d9-ac72b09a1497":{"type":"reader","value":{"id":"c66a522d-a79d-4396-83d9-ac72b09a1497","properties":{"title":[["B+木は多くのリレーショナルデータベースに使われているデータ構造です。値の挿入と削除を対数時間で行える上に、ページキャッシュとの相性が良いという利点があります。"]]},"format":{"block_color":"default"},"type":"text","created_time":1684479840000,"last_edited_time":1684480740000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"02ef0335-e163-4310-b139-a0c32d4732c7":{"type":"reader","value":{"id":"02ef0335-e163-4310-b139-a0c32d4732c7","properties":{"title":[["B+木の中身"]]},"format":{"block_color":"default"},"type":"sub_header","created_time":1684479900000,"last_edited_time":1684479960000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"d4bb9588-7837-43b3-b7f9-7140ac120f4c":{"type":"reader","value":{"id":"d4bb9588-7837-43b3-b7f9-7140ac120f4c","properties":{"title":[["B+木のノードは葉ノードと内部ノードの2種類があります。葉ノードは行をいくつか保持します。内部ノードは複数のノードを子として持ちます。内部ノードは子ノードのキーの最小値も管理しています。B+木は全体として多分木になります。"]]},"format":{"block_color":"default"},"type":"text","created_time":1684479900000,"last_edited_time":1684486440000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"3ea402a3-a0e0-4b2d-b057-5c87593afe04":{"type":"reader","value":{"id":"3ea402a3-a0e0-4b2d-b057-5c87593afe04","properties":{"title":[["Internal A: [3]B [18]C\n  Internal B: [3]E [9]F [14] G\n    Leaf E: [3] {id:3 name:Alice} [4] {id:4 name:Bob} [5] {id:5 name:Zeus}\n    Leaf F: [9] {id:9 name:Charly} [12] {id:12 name:Darlin}\n\t\tLeaf G: [14] {id:14 name:Eren} \n  Internal C: [18] G [20] H \n    Leaf G: [18] {id:18 name:Fran} [id:19 name:Gate}\n    Leaf H: [20] {id:20 name:Hude} {id:24 name:Idle}"]],"language":[["ruby"]]},"format":{},"type":"code","created_time":1684479960000,"last_edited_time":1684480380000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"f941b05f-a47a-4686-99f1-993ebf93e5c8":{"type":"reader","value":{"id":"f941b05f-a47a-4686-99f1-993ebf93e5c8","properties":{"title":[["B+木として成立するための不変条件があります。"]]},"format":{"block_color":"default"},"type":"text","created_time":1684480500000,"last_edited_time":1684480500000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"fcbc3fa2-f7da-4641-a087-5db262f15f5e":{"type":"reader","value":{"id":"fcbc3fa2-f7da-4641-a087-5db262f15f5e","properties":{"title":[["全てのノードの子のキーは小さい順に並んでいる。"]]},"format":{"block_color":"default"},"type":"bulleted_list","created_time":1684480800000,"last_edited_time":1684480860000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"da2a1773-698b-4adf-8d94-6d095ca85ca2":{"type":"reader","value":{"id":"da2a1773-698b-4adf-8d94-6d095ca85ca2","properties":{"title":[["全ての葉ノードは同じ深さである。"]]},"format":{"block_color":"default"},"type":"bulleted_list","created_time":1684480560000,"last_edited_time":1684480560000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"b63b9338-09a1-4d23-bf87-aa6fcc2027d5":{"type":"reader","value":{"id":"b63b9338-09a1-4d23-bf87-aa6fcc2027d5","properties":{"title":[["ノードには最小要素数と最大要素数がある。"]]},"format":{"block_color":"default"},"type":"bulleted_list","created_time":1684480560000,"last_edited_time":1684480620000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"1a1a2cbb-4f53-4fed-aca6-ba712bcfbbec":{"type":"reader","value":{"id":"1a1a2cbb-4f53-4fed-aca6-ba712bcfbbec","properties":{"title":[["最大要素数はメモリページ(4096B)に乗る最大値を採用します。最小要素数は最大要素数の半分です。"]]},"format":{"block_color":"default"},"type":"text","created_time":1684486440000,"last_edited_time":1684486560000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"b90fab97-67f7-4f49-90b3-6fc2f876b117":{"type":"reader","value":{"id":"b90fab97-67f7-4f49-90b3-6fc2f876b117","properties":{"title":[["B+木は追加で葉ノードで次の葉ノードを管理します。"]]},"format":{"block_color":"default"},"type":"text","created_time":1684486620000,"last_edited_time":1684486680000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"7ea0bbbf-5165-4708-9898-256bd9988bf8":{"type":"reader","value":{"id":"7ea0bbbf-5165-4708-9898-256bd9988bf8","properties":{"title":[["B+木の操作（概略）"]]},"format":{"block_color":"default"},"type":"sub_header","created_time":1684486560000,"last_edited_time":1684486680000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"02ba69cf-8de2-4f82-a89d-af059cdeb125":{"type":"reader","value":{"id":"02ba69cf-8de2-4f82-a89d-af059cdeb125","properties":{"title":[["葉に挿入するときに最大要素数を超えるならば、葉を分割します。ルートを分割するときは、新しくルートノードを生やします。"]]},"format":{"block_color":"default"},"type":"text","created_time":1684480620000,"last_edited_time":1684483020000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"d0ee405d-0a54-4a40-871a-6a2b005c1d7f":{"type":"reader","value":{"id":"d0ee405d-0a54-4a40-871a-6a2b005c1d7f","properties":{"title":[["葉から削除するときに最小要素数を下回るなら、他の葉から要素を奪うか、他の葉と併合します。ルートが子を1ノードしか持たないときはルートを削除します。"]]},"format":{"block_color":"default"},"type":"text","created_time":1684480740000,"last_edited_time":1684480920000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"2e49fcf4-e4d2-4b2f-8c1a-a14a1eb6cb03":{"type":"reader","value":{"id":"2e49fcf4-e4d2-4b2f-8c1a-a14a1eb6cb03","properties":{"title":[["平方分割、バケット法に近いテクニックですね。"]]},"format":{"block_color":"default"},"type":"text","created_time":1684486560000,"last_edited_time":1684486680000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"01d1b3ec-004e-4b81-be2e-75c50c2b4dfb":{"type":"reader","value":{"id":"01d1b3ec-004e-4b81-be2e-75c50c2b4dfb","properties":{"title":[["Rustでバッファを扱うときのテク"]]},"format":{"block_color":"default"},"type":"sub_header","created_time":1684480920000,"last_edited_time":1684480920000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"64c2072d-5add-4876-828a-901f7c1ef40c":{"type":"reader","value":{"id":"64c2072d-5add-4876-828a-901f7c1ef40c","properties":{"title":[["Rustで各ノードを "],["type Buffer = [0u8; BUFFER_SIZE]",[["c"]]],[" という固定長のバッファで表します。バッファを静的な所有権チェッカに囚われずに操作するために、 "],["Rc<RefCell<T>>",[["c"]]],[" で囲います。"]]},"format":{"block_color":"default"},"type":"text","created_time":1684480920000,"last_edited_time":1684486800000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"09fc8417-0b8d-461c-b82d-32be01e8179c":{"type":"reader","value":{"id":"09fc8417-0b8d-461c-b82d-32be01e8179c","properties":{"title":[["type Buffer = [0u8; BUFFER_SIZE];\ntype Page = Rc<RefCell<Box<Buffer>>>;"]],"language":[["rust"]]},"format":{},"type":"code","created_time":1684481100000,"last_edited_time":1684483320000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"ad77051a-a98d-49d5-bef8-c7a909b0d588":{"type":"reader","value":{"id":"ad77051a-a98d-49d5-bef8-c7a909b0d588","properties":{"title":[["ノードを管理するための型を作ります。RefCellから値を長く借りると"],["BorrowMutError",[["c"]]],["が実行時に頻出します。メソッドの中で貸し出しを終えると事故りにくいです。"]]},"format":{"block_color":"default"},"type":"text","created_time":1684481100000,"last_edited_time":1684483380000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"1cfa7818-c156-4054-b9b3-e41d7d4344a1":{"type":"reader","value":{"id":"1cfa7818-c156-4054-b9b3-e41d7d4344a1","properties":{"title":[["struct Node { page: Page }\nimpl Node {\n  fn is_root(&self) -> bool {\n\t\tlet page = self.page.borrow();\n\t\t// pageを使って処理を書く\n  }\n} "]],"language":[["rust"]]},"format":{},"type":"code","created_time":1684481280000,"last_edited_time":1684481580000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"a6f8c57b-3e0d-4106-925f-c22d9463bfd2":{"type":"reader","value":{"id":"a6f8c57b-3e0d-4106-925f-c22d9463bfd2","properties":{"title":[["ノードの種類ごとに別の型を作ってNodeを埋め込みます。Nodeに個別の処理を実装すると、葉ノードなのに内部ノードのメソッドを呼べてしまうといったことが起こるため嬉しくないです。"]]},"format":{"block_color":"default"},"type":"text","created_time":1684481280000,"last_edited_time":1684483200000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"0d60a476-91ed-4c99-a889-c4066c35b22d":{"type":"reader","value":{"id":"0d60a476-91ed-4c99-a889-c4066c35b22d","properties":{"title":[["struct LeafNode { node: Node }\nimpl LeafNode {\n  fn get_num_cells(&self) -> usize { /*略*/ }\n}\nstruct InternalNode { node: Node }\nimpl InternalNode {\n  fn get_num_keys(&self) -> usize { /*略*/ }\n}"]],"language":[["rust"]]},"format":{},"type":"code","created_time":1684481340000,"last_edited_time":1684483140000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"2ed6a76b-8cc9-458f-9529-0808bd880d3b":{"type":"reader","value":{"id":"2ed6a76b-8cc9-458f-9529-0808bd880d3b","properties":{"title":[["ノードの共通の処理を "],["LeafNode",[["c"]]],["から直接呼びたいのでDerefを実装する"]]},"format":{"block_color":"default"},"type":"sub_sub_header","created_time":1684481580000,"last_edited_time":1684481640000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"7acaae7b-722c-4357-8fb5-beb36d3ca83c":{"type":"reader","value":{"id":"7acaae7b-722c-4357-8fb5-beb36d3ca83c","properties":{"title":[["個別のノード処理の型から共通のメソッドを呼びたい、という継承的なことをRustではDerefで行えます。"]]},"format":{"block_color":"default"},"type":"text","created_time":1684481640000,"last_edited_time":1684481700000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"db6170fb-01e4-4b6c-b571-19b62408f697":{"type":"reader","value":{"id":"db6170fb-01e4-4b6c-b571-19b62408f697","properties":{"title":[["impl Deref for LeafNode {\n    type Target = Node;\n    fn deref(&self) -> &Self::Target {\n        &self.node\n    }\n}"]],"language":[["rust"]]},"format":{},"type":"code","created_time":1684481640000,"last_edited_time":1684481700000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"28f95c78-36dd-46c5-8995-9d82db56ff86":{"type":"reader","value":{"id":"28f95c78-36dd-46c5-8995-9d82db56ff86","properties":{"title":[["DerefはRustの参照を得る演算子 "],["&",[["c"]]],[" をオーバーライドするトレイトです。メソッドを呼び出すときに、型に存在しないメソッドを参照を得てから探す仕組みがあります。これによって、NodeのメソッドをLeafNodeから使えるようになります。"]]},"format":{"block_color":"default"},"type":"text","created_time":1684481580000,"last_edited_time":1684483200000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"f7e54841-2df0-41aa-a482-c5580ca69fdf":{"type":"reader","value":{"id":"f7e54841-2df0-41aa-a482-c5580ca69fdf","properties":{"title":[["leaf.get_num_cells() // <- LeafNodeのメソッド\nleaf.is_root() // <- LeafNode型なのにNodeのメソッドを呼べる"]],"language":[["rust"]]},"format":{},"type":"code","created_time":1684481820000,"last_edited_time":1684481880000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"34d6d1db-10d3-47cb-80c3-c3becd067caa":{"type":"reader","value":{"id":"34d6d1db-10d3-47cb-80c3-c3becd067caa","properties":{"title":[["borrow_mut()の返り値を加工して返すならRefMut::mapを使う"]]},"format":{"block_color":"default"},"type":"sub_sub_header","created_time":1684481880000,"last_edited_time":1684482540000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"53b1554b-91aa-4bf9-8742-d3bac7ff5bd0":{"type":"reader","value":{"id":"53b1554b-91aa-4bf9-8742-d3bac7ff5bd0","properties":{"title":[["RefCellからborrow_mutで借りた値はRefMut型になっています。RefMut型の一部分をメソッドの外に返すことを考えます。"]]},"format":{"block_color":"default"},"type":"text","created_time":1684481940000,"last_edited_time":1684483200000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"e10f0982-db06-4b38-a578-e47691de0262":{"type":"reader","value":{"id":"e10f0982-db06-4b38-a578-e47691de0262","properties":{"title":[["impl LeafNode {\n\tfn get_head(&self) -> &mut u8 {\n\t\t&mut self.node.borrow_mut()[0] // <- cannot return value referencing temporary value\n  }\n}"]],"language":[["rust"]]},"format":{},"type":"code","created_time":1684481940000,"last_edited_time":1684482480000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"7eea03f2-1aaa-4c1b-8fc9-7c5f846cc9bf":{"type":"reader","value":{"id":"7eea03f2-1aaa-4c1b-8fc9-7c5f846cc9bf","properties":{"title":[["このコードはローカルの一時変数RefMutの参照を返すので所有権チェッカに失敗します。RefMutと同じライフタイムで管理される参照を作るには "],["RefMut::map",[["c"]]],[" が使えます。作られたRefMutもnodeと紐付いて管理されます。"]]},"format":{"block_color":"default"},"type":"text","created_time":1684482300000,"last_edited_time":1684486740000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"826656db-420e-4ee5-b997-3c2354e2f68d":{"type":"reader","value":{"id":"826656db-420e-4ee5-b997-3c2354e2f68d","properties":{"title":[["impl LeafNode {\n\tfn get_head(&self) -> RefMut<u8> {\n\t\tRefMut::map(self.node.borrow_mut(), |node| &mut [0}]\n  }\n}"]],"language":[["rust"]]},"format":{},"type":"code","created_time":1684481880000,"last_edited_time":1684482720000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"f2545c8c-a7fe-4848-b2f5-9e1cbbf61c13":{"type":"reader","value":{"id":"f2545c8c-a7fe-4848-b2f5-9e1cbbf61c13","properties":{"title":[["How Does a Database Work?の注意",[["b"]]]]},"format":{"block_color":"default"},"type":"sub_header","created_time":1684482300000,"last_edited_time":1684482780000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}},"83b9fb04-d805-46c8-b05c-363ca8f9f162":{"type":"reader","value":{"id":"83b9fb04-d805-46c8-b05c-363ca8f9f162","properties":{"title":[["2023-05-19、挿入までしか記述されていない現在、B+木の実装が標準的なものではないように感じました。実装したRustのデータ構造と、How Does a Database Work?のデータ構造の違いはリポジトリに記述してあります。"]]},"format":{"block_color":"default"},"type":"text","created_time":1684482780000,"last_edited_time":1684482900000,"created_by_table":"notion_user","created_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","last_edited_by_table":"user","last_edited_by_id":"7efc331f-9b9e-449d-862e-b0eebef23f04","alive":true,"parent_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent_table":"block"}}},"collection":{},"collection_view":{},"collection_query":{},"signed_urls":{},"notion_user":{},"raw":{"page":{"object":"page","id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","created_time":"2023-05-19T07:01:00.000Z","last_edited_time":"2023-05-19T09:00:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"cover":null,"icon":{"type":"emoji","emoji":"📃"},"parent":{"type":"database_id","database_id":"57afe6b6-f3fa-48bf-9a52-f29731547d0d"},"archived":false,"properties":{"ID":{"id":"cRSs","type":"rich_text","rich_text":[{"type":"text","text":{"content":"b-plus-tree-database","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"b-plus-tree-database","href":null}]},"Summary":{"id":"e%3BSi","type":"rich_text","rich_text":[{"type":"text","text":{"content":"Rustで簡単なデータベースを書く","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Rustで簡単なデータベースを書く","href":null}]},"Created":{"id":"nlFt","type":"created_time","created_time":"2023-05-19T07:01:00.000Z"},"Tags":{"id":"pJSo","type":"multi_select","multi_select":[{"id":"1d187712-fcb9-4f9b-af43-ceb6a9c545e7","name":"dev","color":"blue"},{"id":"b0f8910e-69fa-4fbc-ac52-969c3bb10209","name":"rust","color":"brown"},{"id":"304b7a8d-49e0-4004-ad08-c5a2bafa839e","name":"web","color":"orange"}]},"PublishedAt":{"id":"wN%3Dw","type":"date","date":{"start":"2023-05-19","end":null,"time_zone":null}},"Name":{"id":"title","type":"title","title":[{"type":"text","text":{"content":"B+木を実装してデータベースとRustのRefCellに詳しくなる","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"B+木を実装してデータベースとRustのRefCellに詳しくなる","href":null}]}},"url":"https://www.notion.so/B-Rust-RefCell-c7838b51d30e48e792568a5e66d0ddf9","public_url":null},"block":{"object":"block","id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9","parent":{"type":"database_id","database_id":"57afe6b6-f3fa-48bf-9a52-f29731547d0d"},"created_time":"2023-05-19T07:01:00.000Z","last_edited_time":"2023-05-19T09:00:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":true,"archived":false,"type":"child_page","child_page":{"title":"B+木を実装してデータベースとRustのRefCellに詳しくなる"}},"children":[{"object":"block","id":"297ff104-6320-487e-a47a-2ea54ff2aea0","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:03:00.000Z","last_edited_time":"2023-05-19T07:03:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"bookmark","bookmark":{"caption":[],"url":"https://github.com/wass88/minisql"}},{"object":"block","id":"4ed8bb93-a570-4f86-ae5d-9c404a03a4cf","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:22:00.000Z","last_edited_time":"2023-05-19T07:56:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"挿入、変更、削除ができるB+木のRust実装です。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"挿入、変更、削除ができるB+木のRust実装です。","href":null}],"color":"default"}},{"object":"block","id":"fb90be56-d1cd-4037-9acf-546f7e29e8b0","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:15:00.000Z","last_edited_time":"2023-05-19T07:16:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"$ cargo run run.db\n> insert 1 wass wass@example.com\nRow { id: 1, name: wass, email: wass@example.com }\n> insert 12 banana banana@example.com\nRow { id: 12, name: banana, email: banana@example.com }\n> insert 5 corn corn@example.coom\nRow { id: 5, name: corn, email: corn@example.coom }\n> .btree\nTable { root_page_num: 1 }\nNode 1 NodeType: Leaf, IsRoot: Yes, Parent: 0 ( NumCells: 3, NextLeaf 0 )\n[1] Row { id: 1, name: wass, email: wass@example.com }\n[5] Row { id: 5, name: corn, email: corn@example.coom }\n[12] Row { id: 12, name: banana, email: banana@example.com }\n\n> select 1\nRow { id: 1, name: wass, email: wass@example.com }\n\n> delete 5\n> .btree\nTable { root_page_num: 1 }\nNode 1 NodeType: Leaf, IsRoot: Yes, Parent: 0 ( NumCells: 3, NextLeaf 0 )\n[1] Row { id: 1, name: wass, email: wass@example.com }\n[12] Row { id: 12, name: banana, email: banana@example.com }","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"$ cargo run run.db\n> insert 1 wass wass@example.com\nRow { id: 1, name: wass, email: wass@example.com }\n> insert 12 banana banana@example.com\nRow { id: 12, name: banana, email: banana@example.com }\n> insert 5 corn corn@example.coom\nRow { id: 5, name: corn, email: corn@example.coom }\n> .btree\nTable { root_page_num: 1 }\nNode 1 NodeType: Leaf, IsRoot: Yes, Parent: 0 ( NumCells: 3, NextLeaf 0 )\n[1] Row { id: 1, name: wass, email: wass@example.com }\n[5] Row { id: 5, name: corn, email: corn@example.coom }\n[12] Row { id: 12, name: banana, email: banana@example.com }\n\n> select 1\nRow { id: 1, name: wass, email: wass@example.com }\n\n> delete 5\n> .btree\nTable { root_page_num: 1 }\nNode 1 NodeType: Leaf, IsRoot: Yes, Parent: 0 ( NumCells: 3, NextLeaf 0 )\n[1] Row { id: 1, name: wass, email: wass@example.com }\n[12] Row { id: 12, name: banana, email: banana@example.com }","href":null}],"language":"shell"}},{"object":"block","id":"cd49f3a9-b107-4ce4-a567-d3bccbe82365","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:03:00.000Z","last_edited_time":"2023-05-19T07:03:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"bookmark","bookmark":{"caption":[],"url":"https://cstack.github.io/db_tutorial/"}},{"object":"block","id":"b2b58cbc-412e-4093-8b54-e49fc46fc52f","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:03:00.000Z","last_edited_time":"2023-05-19T08:02:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"How Does a Database Work?","link":null},"annotations":{"bold":true,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"How Does a Database Work?","href":null},{"type":"text","text":{"content":"を読んで、B+木をRustで実装しました。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"を読んで、B+木をRustで実装しました。","href":null}],"color":"default"}},{"object":"block","id":"c66a522d-a79d-4396-83d9-ac72b09a1497","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:04:00.000Z","last_edited_time":"2023-05-19T07:19:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"B+木は多くのリレーショナルデータベースに使われているデータ構造です。値の挿入と削除を対数時間で行える上に、ページキャッシュとの相性が良いという利点があります。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"B+木は多くのリレーショナルデータベースに使われているデータ構造です。値の挿入と削除を対数時間で行える上に、ページキャッシュとの相性が良いという利点があります。","href":null}],"color":"default"}},{"object":"block","id":"02ef0335-e163-4310-b139-a0c32d4732c7","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:05:00.000Z","last_edited_time":"2023-05-19T07:06:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"B+木の中身","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"B+木の中身","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"d4bb9588-7837-43b3-b7f9-7140ac120f4c","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:05:00.000Z","last_edited_time":"2023-05-19T08:54:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"B+木のノードは葉ノードと内部ノードの2種類があります。葉ノードは行をいくつか保持します。内部ノードは複数のノードを子として持ちます。内部ノードは子ノードのキーの最小値も管理しています。B+木は全体として多分木になります。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"B+木のノードは葉ノードと内部ノードの2種類があります。葉ノードは行をいくつか保持します。内部ノードは複数のノードを子として持ちます。内部ノードは子ノードのキーの最小値も管理しています。B+木は全体として多分木になります。","href":null}],"color":"default"}},{"object":"block","id":"3ea402a3-a0e0-4b2d-b057-5c87593afe04","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:06:00.000Z","last_edited_time":"2023-05-19T07:13:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"Internal A: [3]B [18]C\n  Internal B: [3]E [9]F [14] G\n    Leaf E: [3] {id:3 name:Alice} [4] {id:4 name:Bob} [5] {id:5 name:Zeus}\n    Leaf F: [9] {id:9 name:Charly} [12] {id:12 name:Darlin}\n\t\tLeaf G: [14] {id:14 name:Eren} \n  Internal C: [18] G [20] H \n    Leaf G: [18] {id:18 name:Fran} [id:19 name:Gate}\n    Leaf H: [20] {id:20 name:Hude} {id:24 name:Idle}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Internal A: [3]B [18]C\n  Internal B: [3]E [9]F [14] G\n    Leaf E: [3] {id:3 name:Alice} [4] {id:4 name:Bob} [5] {id:5 name:Zeus}\n    Leaf F: [9] {id:9 name:Charly} [12] {id:12 name:Darlin}\n\t\tLeaf G: [14] {id:14 name:Eren} \n  Internal C: [18] G [20] H \n    Leaf G: [18] {id:18 name:Fran} [id:19 name:Gate}\n    Leaf H: [20] {id:20 name:Hude} {id:24 name:Idle}","href":null}],"language":"ruby"}},{"object":"block","id":"f941b05f-a47a-4686-99f1-993ebf93e5c8","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:15:00.000Z","last_edited_time":"2023-05-19T07:15:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"B+木として成立するための不変条件があります。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"B+木として成立するための不変条件があります。","href":null}],"color":"default"}},{"object":"block","id":"fcbc3fa2-f7da-4641-a087-5db262f15f5e","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:20:00.000Z","last_edited_time":"2023-05-19T07:21:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","text":{"content":"全てのノードの子のキーは小さい順に並んでいる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"全てのノードの子のキーは小さい順に並んでいる。","href":null}],"color":"default"}},{"object":"block","id":"da2a1773-698b-4adf-8d94-6d095ca85ca2","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:16:00.000Z","last_edited_time":"2023-05-19T07:16:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","text":{"content":"全ての葉ノードは同じ深さである。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"全ての葉ノードは同じ深さである。","href":null}],"color":"default"}},{"object":"block","id":"b63b9338-09a1-4d23-bf87-aa6fcc2027d5","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:16:00.000Z","last_edited_time":"2023-05-19T07:17:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","text":{"content":"ノードには最小要素数と最大要素数がある。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"ノードには最小要素数と最大要素数がある。","href":null}],"color":"default"}},{"object":"block","id":"1a1a2cbb-4f53-4fed-aca6-ba712bcfbbec","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T08:54:00.000Z","last_edited_time":"2023-05-19T08:56:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"最大要素数はメモリページ(4096B)に乗る最大値を採用します。最小要素数は最大要素数の半分です。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"最大要素数はメモリページ(4096B)に乗る最大値を採用します。最小要素数は最大要素数の半分です。","href":null}],"color":"default"}},{"object":"block","id":"b90fab97-67f7-4f49-90b3-6fc2f876b117","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T08:57:00.000Z","last_edited_time":"2023-05-19T08:58:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"B+木は追加で葉ノードで次の葉ノードを管理します。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"B+木は追加で葉ノードで次の葉ノードを管理します。","href":null}],"color":"default"}},{"object":"block","id":"7ea0bbbf-5165-4708-9898-256bd9988bf8","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T08:56:00.000Z","last_edited_time":"2023-05-19T08:58:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"B+木の操作（概略）","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"B+木の操作（概略）","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"02ba69cf-8de2-4f82-a89d-af059cdeb125","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:17:00.000Z","last_edited_time":"2023-05-19T07:57:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"葉に挿入するときに最大要素数を超えるならば、葉を分割します。ルートを分割するときは、新しくルートノードを生やします。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"葉に挿入するときに最大要素数を超えるならば、葉を分割します。ルートを分割するときは、新しくルートノードを生やします。","href":null}],"color":"default"}},{"object":"block","id":"d0ee405d-0a54-4a40-871a-6a2b005c1d7f","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:19:00.000Z","last_edited_time":"2023-05-19T07:22:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"葉から削除するときに最小要素数を下回るなら、他の葉から要素を奪うか、他の葉と併合します。ルートが子を1ノードしか持たないときはルートを削除します。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"葉から削除するときに最小要素数を下回るなら、他の葉から要素を奪うか、他の葉と併合します。ルートが子を1ノードしか持たないときはルートを削除します。","href":null}],"color":"default"}},{"object":"block","id":"2e49fcf4-e4d2-4b2f-8c1a-a14a1eb6cb03","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T08:56:00.000Z","last_edited_time":"2023-05-19T08:58:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"平方分割、バケット法に近いテクニックですね。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"平方分割、バケット法に近いテクニックですね。","href":null}],"color":"default"}},{"object":"block","id":"01d1b3ec-004e-4b81-be2e-75c50c2b4dfb","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:22:00.000Z","last_edited_time":"2023-05-19T07:22:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"Rustでバッファを扱うときのテク","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Rustでバッファを扱うときのテク","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"64c2072d-5add-4876-828a-901f7c1ef40c","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:22:00.000Z","last_edited_time":"2023-05-19T09:00:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Rustで各ノードを ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Rustで各ノードを ","href":null},{"type":"text","text":{"content":"type Buffer = [0u8; BUFFER_SIZE]","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"type Buffer = [0u8; BUFFER_SIZE]","href":null},{"type":"text","text":{"content":" という固定長のバッファで表します。バッファを静的な所有権チェッカに囚われずに操作するために、 ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" という固定長のバッファで表します。バッファを静的な所有権チェッカに囚われずに操作するために、 ","href":null},{"type":"text","text":{"content":"Rc<RefCell<T>>","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"Rc<RefCell<T>>","href":null},{"type":"text","text":{"content":" で囲います。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" で囲います。","href":null}],"color":"default"}},{"object":"block","id":"09fc8417-0b8d-461c-b82d-32be01e8179c","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:25:00.000Z","last_edited_time":"2023-05-19T08:02:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"type Buffer = [0u8; BUFFER_SIZE];\ntype Page = Rc<RefCell<Box<Buffer>>>;","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"type Buffer = [0u8; BUFFER_SIZE];\ntype Page = Rc<RefCell<Box<Buffer>>>;","href":null}],"language":"rust"}},{"object":"block","id":"ad77051a-a98d-49d5-bef8-c7a909b0d588","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:25:00.000Z","last_edited_time":"2023-05-19T08:03:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"ノードを管理するための型を作ります。RefCellから値を長く借りると","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"ノードを管理するための型を作ります。RefCellから値を長く借りると","href":null},{"type":"text","text":{"content":"BorrowMutError","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"BorrowMutError","href":null},{"type":"text","text":{"content":"が実行時に頻出します。メソッドの中で貸し出しを終えると事故りにくいです。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"が実行時に頻出します。メソッドの中で貸し出しを終えると事故りにくいです。","href":null}],"color":"default"}},{"object":"block","id":"1cfa7818-c156-4054-b9b3-e41d7d4344a1","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:28:00.000Z","last_edited_time":"2023-05-19T07:33:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"struct Node { page: Page }\nimpl Node {\n  fn is_root(&self) -> bool {\n\t\tlet page = self.page.borrow();\n\t\t// pageを使って処理を書く\n  }\n} ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"struct Node { page: Page }\nimpl Node {\n  fn is_root(&self) -> bool {\n\t\tlet page = self.page.borrow();\n\t\t// pageを使って処理を書く\n  }\n} ","href":null}],"language":"rust"}},{"object":"block","id":"a6f8c57b-3e0d-4106-925f-c22d9463bfd2","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:28:00.000Z","last_edited_time":"2023-05-19T08:00:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"ノードの種類ごとに別の型を作ってNodeを埋め込みます。Nodeに個別の処理を実装すると、葉ノードなのに内部ノードのメソッドを呼べてしまうといったことが起こるため嬉しくないです。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"ノードの種類ごとに別の型を作ってNodeを埋め込みます。Nodeに個別の処理を実装すると、葉ノードなのに内部ノードのメソッドを呼べてしまうといったことが起こるため嬉しくないです。","href":null}],"color":"default"}},{"object":"block","id":"0d60a476-91ed-4c99-a889-c4066c35b22d","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:29:00.000Z","last_edited_time":"2023-05-19T07:59:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"struct LeafNode { node: Node }\nimpl LeafNode {\n  fn get_num_cells(&self) -> usize { /*略*/ }\n}\nstruct InternalNode { node: Node }\nimpl InternalNode {\n  fn get_num_keys(&self) -> usize { /*略*/ }\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"struct LeafNode { node: Node }\nimpl LeafNode {\n  fn get_num_cells(&self) -> usize { /*略*/ }\n}\nstruct InternalNode { node: Node }\nimpl InternalNode {\n  fn get_num_keys(&self) -> usize { /*略*/ }\n}","href":null}],"language":"rust"}},{"object":"block","id":"2ed6a76b-8cc9-458f-9529-0808bd880d3b","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:33:00.000Z","last_edited_time":"2023-05-19T07:34:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"heading_3","heading_3":{"rich_text":[{"type":"text","text":{"content":"ノードの共通の処理を ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"ノードの共通の処理を ","href":null},{"type":"text","text":{"content":"LeafNode","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"LeafNode","href":null},{"type":"text","text":{"content":"から直接呼びたいのでDerefを実装する","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"から直接呼びたいのでDerefを実装する","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"7acaae7b-722c-4357-8fb5-beb36d3ca83c","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:34:00.000Z","last_edited_time":"2023-05-19T07:35:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"個別のノード処理の型から共通のメソッドを呼びたい、という継承的なことをRustではDerefで行えます。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"個別のノード処理の型から共通のメソッドを呼びたい、という継承的なことをRustではDerefで行えます。","href":null}],"color":"default"}},{"object":"block","id":"db6170fb-01e4-4b6c-b571-19b62408f697","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:34:00.000Z","last_edited_time":"2023-05-19T07:35:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"impl Deref for LeafNode {\n    type Target = Node;\n    fn deref(&self) -> &Self::Target {\n        &self.node\n    }\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"impl Deref for LeafNode {\n    type Target = Node;\n    fn deref(&self) -> &Self::Target {\n        &self.node\n    }\n}","href":null}],"language":"rust"}},{"object":"block","id":"28f95c78-36dd-46c5-8995-9d82db56ff86","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:33:00.000Z","last_edited_time":"2023-05-19T08:00:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"DerefはRustの参照を得る演算子 ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"DerefはRustの参照を得る演算子 ","href":null},{"type":"text","text":{"content":"&","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"&","href":null},{"type":"text","text":{"content":" をオーバーライドするトレイトです。メソッドを呼び出すときに、型に存在しないメソッドを参照を得てから探す仕組みがあります。これによって、NodeのメソッドをLeafNodeから使えるようになります。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" をオーバーライドするトレイトです。メソッドを呼び出すときに、型に存在しないメソッドを参照を得てから探す仕組みがあります。これによって、NodeのメソッドをLeafNodeから使えるようになります。","href":null}],"color":"default"}},{"object":"block","id":"f7e54841-2df0-41aa-a482-c5580ca69fdf","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:37:00.000Z","last_edited_time":"2023-05-19T07:38:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"leaf.get_num_cells() // <- LeafNodeのメソッド\nleaf.is_root() // <- LeafNode型なのにNodeのメソッドを呼べる","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"leaf.get_num_cells() // <- LeafNodeのメソッド\nleaf.is_root() // <- LeafNode型なのにNodeのメソッドを呼べる","href":null}],"language":"rust"}},{"object":"block","id":"34d6d1db-10d3-47cb-80c3-c3becd067caa","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:38:00.000Z","last_edited_time":"2023-05-19T07:49:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"heading_3","heading_3":{"rich_text":[{"type":"text","text":{"content":"borrow_mut()の返り値を加工して返すならRefMut::mapを使う","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"borrow_mut()の返り値を加工して返すならRefMut::mapを使う","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"53b1554b-91aa-4bf9-8742-d3bac7ff5bd0","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:39:00.000Z","last_edited_time":"2023-05-19T08:00:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"RefCellからborrow_mutで借りた値はRefMut型になっています。RefMut型の一部分をメソッドの外に返すことを考えます。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"RefCellからborrow_mutで借りた値はRefMut型になっています。RefMut型の一部分をメソッドの外に返すことを考えます。","href":null}],"color":"default"}},{"object":"block","id":"e10f0982-db06-4b38-a578-e47691de0262","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:39:00.000Z","last_edited_time":"2023-05-19T07:48:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"impl LeafNode {\n\tfn get_head(&self) -> &mut u8 {\n\t\t&mut self.node.borrow_mut()[0] // <- cannot return value referencing temporary value\n  }\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"impl LeafNode {\n\tfn get_head(&self) -> &mut u8 {\n\t\t&mut self.node.borrow_mut()[0] // <- cannot return value referencing temporary value\n  }\n}","href":null}],"language":"rust"}},{"object":"block","id":"7eea03f2-1aaa-4c1b-8fc9-7c5f846cc9bf","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:45:00.000Z","last_edited_time":"2023-05-19T08:59:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"このコードはローカルの一時変数RefMutの参照を返すので所有権チェッカに失敗します。RefMutと同じライフタイムで管理される参照を作るには ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"このコードはローカルの一時変数RefMutの参照を返すので所有権チェッカに失敗します。RefMutと同じライフタイムで管理される参照を作るには ","href":null},{"type":"text","text":{"content":"RefMut::map","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"RefMut::map","href":null},{"type":"text","text":{"content":" が使えます。作られたRefMutもnodeと紐付いて管理されます。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" が使えます。作られたRefMutもnodeと紐付いて管理されます。","href":null}],"color":"default"}},{"object":"block","id":"826656db-420e-4ee5-b997-3c2354e2f68d","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:38:00.000Z","last_edited_time":"2023-05-19T07:52:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"impl LeafNode {\n\tfn get_head(&self) -> RefMut<u8> {\n\t\tRefMut::map(self.node.borrow_mut(), |node| &mut [0}]\n  }\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"impl LeafNode {\n\tfn get_head(&self) -> RefMut<u8> {\n\t\tRefMut::map(self.node.borrow_mut(), |node| &mut [0}]\n  }\n}","href":null}],"language":"rust"}},{"object":"block","id":"f2545c8c-a7fe-4848-b2f5-9e1cbbf61c13","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:45:00.000Z","last_edited_time":"2023-05-19T07:53:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"How Does a Database Work?の注意","link":null},"annotations":{"bold":true,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"How Does a Database Work?の注意","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"83b9fb04-d805-46c8-b05c-363ca8f9f162","parent":{"type":"page_id","page_id":"c7838b51-d30e-48e7-9256-8a5e66d0ddf9"},"created_time":"2023-05-19T07:53:00.000Z","last_edited_time":"2023-05-19T07:55:00.000Z","created_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"last_edited_by":{"object":"user","id":"7efc331f-9b9e-449d-862e-b0eebef23f04"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"2023-05-19、挿入までしか記述されていない現在、B+木の実装が標準的なものではないように感じました。実装したRustのデータ構造と、How Does a Database Work?のデータ構造の違いはリポジトリに記述してあります。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"2023-05-19、挿入までしか記述されていない現在、B+木の実装が標準的なものではないように感じました。実装したRustのデータ構造と、How Does a Database Work?のデータ構造の違いはリポジトリに記述してあります。","href":null}],"color":"default"}}]}},"lastUpdated":"2023-05-19T09:00:00.000Z"},{"notionID":"e7c37287-e4e5-49af-9965-5d924a782535","id":"2023-05-02-nearest-fraction-table","icon":"➗","tags":["math"],"title":"最も近い分数を探す表 ― 29%は「3人に1人」ではなく「7人に2人」 ","summary":"小数とそれに近い分数の表","recordMap":null,"lastUpdated":"2023-05-02T02:08:00.000Z"},{"notionID":"b0f0ca26-8c65-41d8-a26a-5094feb5290f","id":"2021-01-01-main-page","icon":"📂","tags":["dialy"],"title":"昔のブログとメインページ","summary":"","recordMap":null,"lastUpdated":"2023-01-11T12:37:00.000Z"},{"notionID":"d6b01565-6154-4d9e-adaf-4251d2686f5c","id":"2023-01-10-pencil-puzzle-sugar","icon":"🧩","tags":["puzzle","dev"],"title":"ペンシルパズルを自作して、唯一解判定ソルバーをSugar CSPソルバで作る","summary":"自作ペンパの作成補助ツールを書いた","recordMap":null,"lastUpdated":"2023-01-10T12:20:00.000Z"},{"notionID":"aaf030d8-d49a-459c-a27f-0b42f51a661e","id":"2022-12-08-zsh-ctrl-c-recover","icon":"🧬","tags":["dev"],"title":"zshでミスってCtrl-Cをして、空っぽになった入力を取り戻す","summary":"うっかりキャンセルしたコマンドを再入力できるようにzshを設定する。","recordMap":null,"lastUpdated":"2022-12-07T04:52:00.000Z"},{"notionID":"745b2eee-1012-4d85-a824-046b71d0645f","id":"2022-12-05-shortcut-of-word","icon":"🍰","tags":["dev"],"title":"ショートカットでコマンドを入力すると、どんな環境でもそこそこ便利になる","summary":"iterm2のショートカットで頻出単語を入力する","recordMap":null,"lastUpdated":"2022-12-05T16:13:00.000Z"},{"notionID":"082b239b-a9f1-4602-9a4e-f7dcc5c44983","id":"2022-10-29-repair-ih","icon":"🔧","tags":["dialy"],"title":"壊れた卓上IHを自分で修理する","summary":"IHのスイッチが壊れたので、自分ではんだ付けして直す。","recordMap":null,"lastUpdated":"2022-10-28T12:29:00.000Z"},{"notionID":"fce999af-1379-4dc9-b44f-b2c172f1198d","id":"2022-10-28-the-fools-question","icon":"❓","tags":["dialy"],"title":"教養動画における本当に何もわかってない道化の存在について","summary":"何もわかっていな人が与える安心感と質問することについて。","recordMap":null,"lastUpdated":"2022-11-02T12:37:00.000Z"},{"notionID":"9a0af657-87b2-44c6-9b01-8d1e6260fd5e","id":"2022-10-28-virtual-dom","icon":"🌌","tags":["js"],"title":"仮想DOMの差分更新を簡単に実装する","summary":"仮想DOMの簡単な実装を行いました。差分をみて必要なDOMの更新だけ取り出します。","recordMap":null,"lastUpdated":"2022-10-28T21:59:00.000Z"},{"notionID":"5d9d1a5b-f3ba-4562-a71d-126d16803f1c","id":"2022-10-28-vue-computed","icon":"💚","tags":["vue","js"],"title":"Vueっぽいものを実装してComputedの仕組みを探る","summary":"VueのComputedのやや魔法っぽい、依存関係の自動導出についての仕組みを、簡単な実装で解説しました。","recordMap":null,"lastUpdated":"2022-11-03T13:10:00.000Z"},{"notionID":"5b75289d-a98f-4a25-a02b-4290f87cc16b","id":"2022-10-05-tictactoe-random","icon":"⭕","tags":["game"],"title":"三目並べをランダムに指したときの先手の勝利確率は?","summary":"まったくもってランダムに三目並べを行うときに先手はどれくらい有利か","recordMap":null,"lastUpdated":"2022-11-24T10:42:00.000Z"},{"notionID":"b34f2185-860f-46e4-adae-b6a824a7c06b","id":"2022-08-07-ray-tracing-in-one-weekend","icon":"🔆","tags":["rust"],"title":"『Ray Tracing in One Weekend』をやった","summary":"レイトレーシングを実装する","recordMap":null,"lastUpdated":"2022-08-09T11:35:00.000Z"},{"notionID":"9137f946-c9f2-495a-9465-e22c317717bf","id":"2022-08-09-infinite-turtle-brainfuck","icon":"🧠","tags":["game"],"title":"コンベアで計算する『Infinite Turtles』でBrainfuckインタプリタを実装した","summary":"ベルトコンベアでbrainfuckを計算する様子","recordMap":null,"lastUpdated":"2022-10-28T12:28:00.000Z"},{"notionID":"7b60f0a0-848e-40d5-be90-9f28d934fbb2","id":"2022-10-25-rust-c-compiler","icon":"🦀","tags":["rust","compiler"],"title":"Rustで「低レイヤを知りたい人のためのCコンパイラ作成入門」を少しやる","summary":"コンパイラ作りを思い出す","recordMap":null,"lastUpdated":"2022-10-25T09:06:00.000Z"},{"notionID":"02f7fec3-88ee-4275-bb46-057a81153eba","id":"2022-07-24-isucon12-qualified","icon":"🎉","tags":["isucon","web"],"title":"ISUCON12予選突破した。 :old_noto_innocent: ","summary":"ISUCON12予選突破できた。そのまとめ。","recordMap":null,"lastUpdated":"2022-07-28T02:00:00.000Z"},{"notionID":"8837459a-5a44-48f1-ba64-3764c7cd659b","id":"2022-08-08-inifinite-turtles","icon":"🐢","tags":["game"],"title":"自動化コンベアでチューリング完全を目指す『Infinite Turtles』の紹介","summary":"steamのゲームの紹介。ベルトコンベアでいろんな問題を解く。","recordMap":null,"lastUpdated":"2022-10-28T12:29:00.000Z"},{"notionID":"31901beb-64fe-4576-8211-e14654a1c0c7","id":"2022-07-13-notion-blog","icon":"📝","tags":["notion","nextjs"],"title":"Notionでもブログを書けるように","summary":"Notionからnextjsでブログを生成する","recordMap":null,"lastUpdated":"2023-05-26T05:38:00.000Z"}]},"__N_SSG":true}